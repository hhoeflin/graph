useDynLib(graph)

import(methods,cluster)

exportClasses(gNode, gEdge, simpleEdge, hashtable, generalGraph, distGraph, edgeSet,
  clusterGraph, graphH, graph, graphNEL, file, connection,
  propertyHolder, graphIM, nodeSet, attrData) 

exportMethods(DFS, Dist, acc, addEdge, addNode, addNodes, adj, asGraphProperty,
      bNode, clearNode, clusteringCoefficient, combineNodes, complement,
      connComp, degree, dumpGXL, eNode, edgeSetAttributes,
      "edgeSetAttributes<-", edgeSetAttr, "edgeSetAttr<-", edgeAttributes,
      "edgeAttributes<-", edgeID, edgeL, edgeMatrix, edgeNames, edgeOrder,
      edgeProps, "edgeProps<-", edgeWeights, edgemode, "edgemode<-", edges,
      fromEdges, "fromEdges<-", "toEdges<-", "nodes<-", fromGXL, getNodes, hash,
      idstring, inEdges, initialize, intersection, intersection2, intersection3,
      isAdjacent, isConnected, isDirected, join, label, nodeID, nodeType, nodes,
      nodeNames, "nodeNames<-", nodeSet, numNodes, property, "property<-",
      removeEdge, removeNode, show, subGraph, threshold, toEdges, toGXL, union,
      validateGXL, coerce, toDotR, nodeSetAttributes, "nodeSetAttributes<-",
              nodeAttributes, "nodeAttributes<-", nodeSetAttr, "nodeSetAttr<-",
              nodeProps, "nodeProps<-", "props", "props<-", attrDefaults,
              "attrDefaults<-", edgeDataDefaults, "edgeDataDefaults<-",
              nodeDataDefaults, "nodeDataDefaults<-", edgeData, "edgeData<-",
              nodeData, "nodeData<-", attrDataItem, "attrDataItem<-")


export(boundary, buildRepDepGraph, hashtable, calcProb, calcSumProb,
       duplicatedEdges, graph2SparseM, listEdges, numEdges,
       randomEGraph, randomGraph, randomNodeGraph, ugraph,
       validGraph, eWV, pathWeights, .dropEdges, 
       aveNumEdges, sparseM2Graph, gxlTreeNEL,
       ftM2adjM, ftM2graphNEL, .ftM2other, NELhandler, int2ftM, 
       ftM2int, aM2bpG, mostEdges, numNoEdges) 


S3method(write,tlp)


