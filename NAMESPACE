useDynLib(graph)

import(methods,cluster)

exportClasses(gNode, gEdge, simpleEdge, hashtable, generalGraph, distGraph, edgeSet,
  clusterGraph, graphH, graph, graphNEL, file, connection,
  propertyHolder, graphIM) 

exportMethods(DFS, Dist, acc, addEdge, addEdge2, addNode, adj, asGraphProperty,
      bNode, clearNode, clusteringCoefficient, combineNodes, complement,
      connComp, degree, dumpGXL, eNode, edgeID, edgeL, edgeMatrix,
      edgeNames, edgeOrder, edgeWeights, edgemode, "edgemode<-", edges, fromEdges,
      "fromEdges<-", "toEdges<-", "nodes<-",
      fromGXL, getEdge, getEdges, getNodes, hash, idstring, inEdges, initialize, intersection,
      intersection2, intersection3, isConnected, isDirected, join, label, nodeID,
      nodeType, nodes, nodeNames, "nodeNames<-", nodeSet, numNodes, property,
      "property<-", removeEdge, removeEdges, removeNode, show,
      subGraph, threshold, toEdges, toGXL, union, validateGXL, coerce, toDotR)


export(boundary, buildRepDepGraph, hashtable, calcProb, calcSumProb,
       duplicatedEdges, graph2SparseM, listEdges, numEdges,
       randomEGraph, randomGraph, randomNodeGraph, ugraph,
       validGraph, eWV, pathWeights, .dropEdges, 
       aveNumEdges, sparseM2Graph, gxlTreeNEL,
       ftM2adjM, ftM2graphNEL, .ftM2other, NELhandler, int2ftM, 
       ftM2int, aM2bpG, mostEdges, numNoEdges) 


S3method(write,tlp)


